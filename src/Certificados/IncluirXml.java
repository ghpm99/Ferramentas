/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Certificados;

import Cadastro.Produto;
import Certificado.Nota;
import static Certificados.Incluir.imprimir;
import GUIPrincipal.Inicial;
import XML.IncluirCertificadoXml;
import java.awt.HeadlessException;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Qualidade
 */
public class IncluirXml extends javax.swing.JInternalFrame {

    private JFrame pai;
    private static IncluirXml instancia;
    private Nota nota_C;
    int progr = 0;

    /**
     * Creates new form IncluirXml
     */
    public IncluirXml() {
        initComponents();
    }

    public static IncluirXml getInstancia() {
        if (instancia == null) {
            instancia = new IncluirXml();
        }
        return instancia;
    }

    public void setPai(JFrame arg0) {
        this.pai = arg0;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        qntItens = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cliente = new javax.swing.JLabel();
        cnpj = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nota = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pedido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        caminho = new javax.swing.JLabel();
        procurar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        produtos = new javax.swing.JTable();
        incluir = new javax.swing.JButton();
        imprimir = new javax.swing.JCheckBox();
        itensButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        progresso = new javax.swing.JProgressBar();

        setClosable(true);
        setTitle("Incluir Certificado Xml");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("Cliente:");

        jLabel2.setText("Nota:");

        jLabel3.setText("Pedido:");

        jLabel4.setText("XML:");

        procurar.setText("Procurar");
        procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procurarActionPerformed(evt);
            }
        });

        produtos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Quantidade", "Certificado Orig.", "Norma", "Tratamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        produtos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(produtos);

        incluir.setText("Gerar");
        incluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incluirActionPerformed(evt);
            }
        });

        imprimir.setText("Imprimir");

        itensButton.setText("Itens");
        itensButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itensButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Qnt. de Itens:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(caminho, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(procurar)
                                .addGap(16, 16, 16)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(qntItens, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(imprimir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(itensButton)
                                .addGap(18, 18, 18)
                                .addComponent(progresso, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(incluir))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(cnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(nota, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(pedido)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pedido)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cnpj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(procurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(caminho, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(qntItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(itensButton)
                        .addComponent(imprimir))
                    .addComponent(incluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progresso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setNota(Nota arg0) {
        this.nota_C = arg0;
        limparTabela();
        atualizar();
    }

    private void atualizar() {
        nota.setText(nota_C.getNumero());
        cnpj.setText(nota_C.getCnpj());
        cliente.setText(nota_C.getCliente());

        Iterator produt = nota_C.getItens().iterator();
        progresso.setMaximum(nota_C.getItens().size());
        while (produt.hasNext()) {
            Produto itens = (Produto) produt.next();
            DefaultTableModel model = (DefaultTableModel) produtos.getModel();

            if (itens.getTratamento() == null) {
                itens.setTratamento("Sem Tratamento");
            }

            String[] linha = {itens.getCodigo(), itens.getDescricao(), itens.getQuantidade(), itens.getCertificado(), itens.getNorma(), itens.getTratamento()};

            model.addRow(linha);

        }

        qntItens.setText(String.valueOf(nota_C.getItens().size()));

    }


    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        Inicial.principal.menuPrincipal.setVisible(true);
    }//GEN-LAST:event_formInternalFrameClosing

    private void itensButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itensButtonActionPerformed
        // TODO add your handling code here:
        if (nota_C == null) {
            return;
        }
        Itens itens = new Itens(new JFrame(), true, nota_C);
        //add(itens);

        //pai.add(itens);
        itens.setVisible(true);
    }//GEN-LAST:event_itensButtonActionPerformed

    private void incluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incluirActionPerformed
        // TODO add your handling code here:

        Iterator produt = nota_C.getItens().iterator();
        progr = 0;
        progresso.setValue(progr);
        produt.forEachRemaining((ele) -> new Thread(() -> incluir((Produto) ele)).start());

//        while (produt.hasNext()) {
//            Produto itens = (Produto) produt.next();  
//            
//            new Thread(() -> incluir(itens)).start();
//        }
    }//GEN-LAST:event_incluirActionPerformed

    private void aumentar() {
        if (progr > nota_C.getItens().size()) {
            return;
        }
        progr++;
        progresso.setValue(progr);
    }

    private synchronized void incluir(Produto arg0) {
        try {
            incluir.setEnabled(false);
            procurar.setEnabled(false);
            pedido.setEditable(false);
            setClosable(false);
            System.out.println(arg0.getCodigo());
            Certificado.setCnpj(nota_C.getCnpj());

            Certificado.setCliente(nota_C.getCliente());

            Certificado.setPedido(pedido.getText());

            Certificado.setNota(nota_C.getNumero());

            Certificado.setQnt(arg0.getQuantidade());

            Certificado.setProduto(arg0);

            Certificado.setComplemento("");

            Certificado.setComplementoValor("");

            Certificado.setTratamento(arg0.getTratamento());

            if (!IncluirCertificado.verificar()) {
                JOptionPane.showMessageDialog(null, "Falhou", "Falhou", JOptionPane.INFORMATION_MESSAGE);
                incluir.setText("Verificar");
            } else {
                aumentar();
                incluir.setText("Incluiu");
            }
        } catch (HeadlessException e) {
            e.printStackTrace();

        } finally {

            // msg.delete(0, msg.length());
            setClosable(true);
            pedido.setEditable(true);
            procurar.setEnabled(true);
            incluir.setEnabled(true);
        }

        if (imprimir.isSelected()) {
            imprimir(Certificado.getNumeroCertificado());
        }
    }

    private void limparTabela() {
        DefaultTableModel model = (DefaultTableModel) produtos.getModel();
        model.setNumRows(0);
    }

    private void procurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procurarActionPerformed
        // TODO add your handling code here:

        JFileChooser pasta = new JFileChooser();
        pasta.setFileSelectionMode(JFileChooser.FILES_ONLY);
        limparTabela();
        if (pasta.showOpenDialog(pasta) != JFileChooser.APPROVE_OPTION) {
            return;
        }

        caminho.setText(pasta.getSelectedFile().getAbsolutePath());
        IncluirCertificadoXml incluirCertificado = new IncluirCertificadoXml(pasta.getSelectedFile());
        incluirCertificado.abrir();
        nota_C = incluirCertificado.getNota();
        atualizar();
    }//GEN-LAST:event_procurarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel caminho;
    private javax.swing.JLabel cliente;
    private javax.swing.JLabel cnpj;
    private javax.swing.JCheckBox imprimir;
    private javax.swing.JButton incluir;
    private javax.swing.JButton itensButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nota;
    private javax.swing.JTextField pedido;
    private javax.swing.JButton procurar;
    private javax.swing.JTable produtos;
    private javax.swing.JProgressBar progresso;
    private javax.swing.JLabel qntItens;
    // End of variables declaration//GEN-END:variables
}
